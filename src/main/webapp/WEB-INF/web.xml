<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

    <display-name>ShopMart</display-name>
    <!-- 前端控制器的配置 -->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <!--指定spring配置文件的位置 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:applicationContext.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- 所有以.html和.json的请求都由dispatcherServlet来处理的配置 -->
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>

    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>ftlFilter</filter-name>
        <filter-class>edu.zju.cst.filter.FtlFilter</filter-class>
        <init-param>
            <param-name>charset</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>ftlFilter</filter-name>
        <url-pattern>*.ftl</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>AdminFilter</filter-name>
        <filter-class>edu.zju.cst.filter.AdminFilter</filter-class>
        <init-param>
            <param-name>redirectURL</param-name>
            <param-value>/admin/login</param-value>
        </init-param>
        <init-param>
            <param-name>notCheckURLList</param-name>
            <param-value>/admin/login;/admin/user/update</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>AdminFilter</filter-name>
        <url-pattern>/admin/*</url-pattern>
    </filter-mapping>


    <filter>
        <filter-name>CustomFilter</filter-name>
        <filter-class>edu.zju.cst.filter.CustomFilter</filter-class>
        <init-param>
            <param-name>redirectURL</param-name>
            <param-value>/custom/login</param-value>
        </init-param>
        <init-param>
            <param-name>notCheckURLList</param-name>
            <param-value>/custom/login</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CustomFilter</filter-name>
        <url-pattern>/custom/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>SupplyFilter</filter-name>
        <filter-class>edu.zju.cst.filter.SupplyFilter</filter-class>
        <init-param>
            <param-name>redirectURL</param-name>
            <param-value>/supply/login</param-value>
        </init-param>
        <init-param>
            <param-name>notCheckURLList</param-name>
            <param-value>/supply/login</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>SupplyFilter</filter-name>
        <url-pattern>/supply/*</url-pattern>
    </filter-mapping>

    <!-- 让web应用程序启动那个时自动添加属性文件 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <!-- 以Listener方式启动LOG4j -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!-- 以Listener方式启动spring -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
    </listener>
    <session-config>
        <session-timeout>20</session-timeout>
    </session-config>

</web-app>